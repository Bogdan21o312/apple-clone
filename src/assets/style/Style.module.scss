@use "sass:math";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Template style ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================


// Connection of mixins ===========================================================================================================================================================================================================================================================================
@import "base/mixins.module";

// Connection of fonts ==============================================================================================================================================================================================================================================================================
@import "fonts/main.module";

$fontSize: rem(12); // where 14(px) is the default font size from the layout

@import "base/colors.module";

// Adaptive grid settings ===============================================================================================================================================================================================================================================================================================

// Minimum page width
$minWidth: 320;
// Canvas width (layout)
$maxWidth: 1512;
// Width of bounding container (0 = no bounding)
$maxWidthContainer: 1488;
// Total indentation of the container
// (30 = 15px left and right, 0 = no indentation)
$containerPadding: 30;

// The width of the trigger of the first breakpoint
$containerWidth: $maxWidthContainer + $containerPadding;

// Breakpoints
$pc: em($containerWidth); // PCs, laptops, some tablets in horizontal position
$tablet: em(991.98); // Tablets, some phones in horizontal position
$mobile: em(767.98); // Phones L
$mobileSmall: em(479.98); // Phones S

// Adaptive type:
// 1 = responsiveness (the container has no breakpoints),
// 2 = at breakpoints (the container changes its width at breakpoints)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Reset ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null.module";

// BODY tag styles ============================================================================================================================================================================================================================================================================================================================================================================================

body {
  line-height: math.div(16, 12);
}

// Shell wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.Wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  // Press the footer
  > main {
    flex: 1 1 auto;
  }

  // Fix for sliders
  > * {
    min-width: 0;
  }
}


// Working with a bounding container ======================================================================================================================================================================================================================

/*
(i) Styles will be applied to
to all classes containing *__container
For example header__container, main__container etc.
*/
.Container {
  max-width: rem(980);
  margin: 0 auto;
  width: 100%;
}

@if ($responsiveType==1) {
  // Responsive
  .Container {
    @if ($maxWidthContainer>0) {
      max-width: rem($containerWidth);
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      @if ($maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      } @else {
        @include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
        @include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
      }
    }
  }
} @else {
  // By break points
  .Container {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($containerWidth);
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

